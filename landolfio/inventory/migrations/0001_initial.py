# Generated by Django 4.1.7 on 2023-05-03 09:49

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import inventory.models.asset
import inventory.models.attachment
import re
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounting", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[-a-zA-Z0-9_]+\\Z"),
                                "Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.",
                                "invalid",
                            ),
                            inventory.models.asset.validate_uppercase,
                        ],
                        verbose_name="name",
                    ),
                ),
                (
                    "listing_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="listing price",
                    ),
                ),
                (
                    "local_status",
                    models.CharField(
                        choices=[
                            ("unknown", "unknown"),
                            ("placeholder", "placeholder"),
                            ("to_be_delivered", "to be delivered"),
                            ("under_review", "under review"),
                            ("maintenance_in_house", "maintenance in house"),
                            ("maintenance_external", "maintenance external"),
                            ("available", "available"),
                            ("issued_unprocessed", "issued unprocessed"),
                            ("issued_rent", "issued rent"),
                            ("issued_loan", "issued loan"),
                            ("amortized", "amortized"),
                            ("sold", "sold"),
                        ],
                        default="unknown",
                        max_length=40,
                        verbose_name="local status",
                    ),
                ),
                (
                    "raw_data",
                    models.JSONField(blank=True, null=True, verbose_name="raw data"),
                ),
            ],
            options={
                "verbose_name": "asset",
                "verbose_name_plural": "assets",
                "ordering": ["-created_at", "name"],
            },
        ),
        migrations.CreateModel(
            name="AssetCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="name")),
                (
                    "name_singular",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[-\\w]+\\Z"),
                                "Enter a valid “slug” consisting of Unicode letters, numbers, underscores, or hyphens.",
                                "invalid",
                            )
                        ],
                        verbose_name="name singular",
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="order"
                    ),
                ),
            ],
            options={
                "verbose_name": "category",
                "verbose_name_plural": "categories",
                "ordering": ["order", "pk"],
            },
        ),
        migrations.CreateModel(
            name="AssetLocationGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="name")),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="order"
                    ),
                ),
            ],
            options={
                "verbose_name": "location group",
                "verbose_name_plural": "location groups",
                "ordering": ["order", "pk"],
            },
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, unique=True, verbose_name="name"),
                ),
                (
                    "commerce",
                    models.BooleanField(default=True, verbose_name="commerce"),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="order"
                    ),
                ),
            ],
            options={
                "verbose_name": "collection",
                "verbose_name_plural": "collections",
                "ordering": ["order", "pk"],
            },
        ),
        migrations.CreateModel(
            name="Remark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("remark", models.TextField(verbose_name="remark")),
                (
                    "date",
                    models.DateField(auto_now_add=True, null=True, verbose_name="date"),
                ),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="remarks",
                        to="inventory.asset",
                        verbose_name="asset",
                    ),
                ),
            ],
            options={
                "verbose_name": "remark",
                "verbose_name_plural": "remarks",
            },
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attachment",
                    models.FileField(
                        upload_to=inventory.models.attachment.attachments_directory_path,
                        verbose_name="attachment",
                    ),
                ),
                (
                    "upload_date",
                    models.DateField(auto_now_add=True, verbose_name="upload date"),
                ),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="inventory.asset",
                        verbose_name="asset",
                    ),
                ),
            ],
            options={
                "verbose_name": "attachment",
                "verbose_name_plural": "attachments",
                "ordering": ["upload_date"],
            },
        ),
        migrations.CreateModel(
            name="AssetSize",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="name")),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="order"
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        to="inventory.assetcategory", verbose_name="categories"
                    ),
                ),
            ],
            options={
                "verbose_name": "size",
                "verbose_name_plural": "sizes",
                "ordering": ["order", "pk"],
            },
        ),
        migrations.CreateModel(
            name="AssetOnRecurringSalesInvoiceDocumentLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="value"
                    ),
                ),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_sales_invoice_document_line_assets",
                        to="inventory.asset",
                        verbose_name="asset",
                    ),
                ),
                (
                    "document_line",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assets",
                        to="accounting.recurringsalesinvoicedocumentline",
                        verbose_name="document line",
                    ),
                ),
            ],
            options={
                "verbose_name": "asset on recurring sales invoice document line",
                "verbose_name_plural": "assets on recurring sales invoice document lines",
                "unique_together": {("asset", "document_line")},
            },
        ),
        migrations.CreateModel(
            name="AssetOnJournalDocumentLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="value"
                    ),
                ),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="journal_document_line_assets",
                        to="inventory.asset",
                        verbose_name="asset",
                    ),
                ),
                (
                    "document_line",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assets",
                        to="accounting.journaldocumentline",
                        verbose_name="document line",
                    ),
                ),
            ],
            options={
                "verbose_name": "asset on journal document line",
                "verbose_name_plural": "assets on journal document lines",
                "unique_together": {("asset", "document_line")},
            },
        ),
        migrations.CreateModel(
            name="AssetOnEstimateDocumentLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="value"
                    ),
                ),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="estimate_document_line_assets",
                        to="inventory.asset",
                        verbose_name="asset",
                    ),
                ),
                (
                    "document_line",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assets",
                        to="accounting.estimatedocumentline",
                        verbose_name="document line",
                    ),
                ),
            ],
            options={
                "verbose_name": "asset on estimate document line",
                "verbose_name_plural": "assets on estimate document lines",
                "unique_together": {("asset", "document_line")},
            },
        ),
        migrations.CreateModel(
            name="AssetLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="name")),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="order"
                    ),
                ),
                (
                    "location_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory.assetlocationgroup",
                        verbose_name="location group",
                    ),
                ),
            ],
            options={
                "verbose_name": "location",
                "verbose_name_plural": "locations",
                "ordering": ["location_group__order", "order", "pk"],
            },
        ),
        migrations.AddField(
            model_name="asset",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="inventory.assetcategory",
                verbose_name="category",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="collection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="inventory.collection",
                verbose_name="collection",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="estimate_document_lines",
            field=models.ManyToManyField(
                through="inventory.AssetOnEstimateDocumentLine",
                to="accounting.estimatedocumentline",
                verbose_name="estimate document lines",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="journal_document_lines",
            field=models.ManyToManyField(
                through="inventory.AssetOnJournalDocumentLine",
                to="accounting.journaldocumentline",
                verbose_name="journal document lines",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="inventory.assetlocation",
                verbose_name="location",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="recurring_sales_invoice_document_lines",
            field=models.ManyToManyField(
                through="inventory.AssetOnRecurringSalesInvoiceDocumentLine",
                to="accounting.recurringsalesinvoicedocumentline",
                verbose_name="recurring sales invoice document lines",
            ),
        ),
        migrations.AddField(
            model_name="asset",
            name="size",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="inventory.assetsize",
                verbose_name="size",
            ),
        ),
        migrations.CreateModel(
            name="AssetSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="value"
                    ),
                ),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="asset_subscriptions",
                        to="inventory.asset",
                        verbose_name="asset",
                    ),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assets",
                        to="accounting.subscription",
                        verbose_name="subscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "asset subscription",
                "verbose_name_plural": "assets subscriptions",
                "unique_together": {("asset", "subscription")},
            },
        ),
    ]
